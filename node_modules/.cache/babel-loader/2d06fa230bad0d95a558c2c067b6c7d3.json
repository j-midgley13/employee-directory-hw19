{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jamesonmidgley/Desktop/coding/week-nineteen/employee-directory-hw19/employee-dir/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Alert from \"../components/Alert\";\nimport Table from '../components/Table';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: [],\n      employees: [],\n      results: [],\n      error: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.narrowEmployee(this.state.search).then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.results);\n        }\n\n        this.setState({\n          results: res.data.results,\n          error: \"\"\n        });\n      }).catch(err => this.setState({\n        error: err.results\n      }));\n    };\n  }\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getEmployees().then(res => this.setState({\n      employees: res.data.results\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          minHeight: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Search By Employee!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          type: \"danger\",\n          style: {\n            opacity: this.state.error ? 1 : 0,\n            marginBottom: 10\n          },\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n          handleFormSubmit: this.handleFormSubmit,\n          handleInputChange: this.handleInputChange,\n          employees: this.state.employees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n          results: this.state.results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          employees: this.state.employees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/jamesonmidgley/Desktop/coding/week-nineteen/employee-directory-hw19/employee-dir/src/pages/Search.js"],"names":["React","Component","API","Container","SearchForm","SearchResults","Alert","Table","Search","state","search","employees","results","error","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","narrowEmployee","then","res","data","status","Error","catch","err","componentDidMount","getEmployees","console","log","render","minHeight","opacity","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Alert from \"../components/Alert\";\nimport Table from '../components/Table';\n\nclass Search extends Component {\n  state = {\n    search: [],\n    employees: [],\n    results: [],\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getEmployees()\n      .then(res => this.setState({ employees: res.data.results }))\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.narrowEmployee(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.results);\n        }\n        this.setState({ results: res.data.results, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err.results }));\n  };\n  render() {\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">Search By Employee!</h1>\n          <Alert\n            type=\"danger\"\n            style={{ opacity: this.state.error ? 1 : 0, marginBottom: 10 }}\n          >\n            {this.state.error}\n          </Alert>\n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            employees={this.state.employees}\n          />\n          <SearchResults results={this.state.results} />\n          <Table employees={this.state.employees} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}