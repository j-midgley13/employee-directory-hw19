{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jamesonmidgley/Desktop/coding/week-nineteen/employee-directory-hw19/employee-dir/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Row from '../components/Row';\nimport Table from '../components/Table';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: [],\n      employees: [],\n      searchEmp: [],\n      results: [],\n      error: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n      const filteredChoice = this.state.employees.filter(filter => {\n        let searchedEmp = filter.name.first + filter.name.last;\n        return searchedEmp.indexOf(this.state.search) !== -1;\n      });\n      this.setState({\n        searchEmp: filteredChoice\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      API.getEmployees(this.state.search).then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.results);\n        }\n\n        this.setState({\n          results: res.data.results,\n          error: \"\"\n        });\n      }).catch(err => this.setState({\n        error: err.results\n      }));\n    };\n  }\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getEmployees().then(res => this.setState({\n      employees: res.data.results\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    let table;\n    const searched = this.state.search;\n    let alterState;\n\n    if (searched === undefined || searched.length === 0) {\n      alterState = false;\n    } else {\n      alterState = true;\n    }\n\n    if (alterState === false) {\n      table = /*#__PURE__*/_jsxDEV(Table, {\n        employees: this.state.employees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }, this);\n    } else {\n      table = /*#__PURE__*/_jsxDEV(SearchResults, {\n        results: this.state.searchEmp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          minHeight: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          style: \"background-color: #BAF3F5\",\n          children: \"Search By Employee!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n          handleFormSubmit: this.handleFormSubmit,\n          handleInputChange: this.handleInputChange,\n          employees: this.state.employees\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: table\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/jamesonmidgley/Desktop/coding/week-nineteen/employee-directory-hw19/employee-dir/src/pages/Search.js"],"names":["React","Component","API","Container","SearchForm","SearchResults","Row","Table","Search","state","search","employees","searchEmp","results","error","handleInputChange","event","setState","target","value","filteredChoice","filter","searchedEmp","name","first","last","indexOf","handleFormSubmit","preventDefault","getEmployees","then","res","data","status","Error","catch","err","componentDidMount","console","log","render","table","searched","alterState","undefined","length","minHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Row from '../components/Row';\nimport Table from '../components/Table';\n\nclass Search extends Component {\n  state = {\n    search: [],\n    employees: [],\n    searchEmp: [],\n    results: [],\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  componentDidMount() {\n    API.getEmployees()\n      .then(res => this.setState({ employees: res.data.results }))\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n    const filteredChoice = this.state.employees.filter((filter)=>{\n      let searchedEmp = filter.name.first + filter.name.last \n      return searchedEmp.indexOf(this.state.search) !== -1;\n    })\n    \n    this.setState({searchEmp: filteredChoice})\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getEmployees(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.results);\n        }\n        this.setState({ results: res.data.results, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err.results }));\n  };\n\n  render() {\n    \n      let table;\n      const searched = this.state.search;\n      let alterState\n      if (searched === undefined || searched.length === 0){alterState = false}\n      else {alterState = true}\n      if (alterState===false){table=<Table employees= {this.state.employees} />} \n      else {table=<SearchResults results={this.state.searchEmp}/>}\n      return (\n<div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h3 className=\"text-center\" style=\"background-color: #BAF3F5\">Search By Employee!</h3>\n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            employees={this.state.employees}\n          />\n          <Row>\n            {table}\n          </Row>\n          \n        </Container>\n      </div>\n      )\n      \n    \n  }\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}